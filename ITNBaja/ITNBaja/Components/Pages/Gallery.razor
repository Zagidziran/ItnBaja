@page "/gallery"
@page "/галерея"
@inject IWebHostEnvironment Environment
@rendermode InteractiveServer

<PageTitle>Галерея</PageTitle>

<div class="gallery-content">
    <h1 class="gallery-title">Галерея</h1>
    
    @if (galleryData == null)
    {
        <p>Загрузка галереи...</p>
    }
    else if (!galleryData.Any())
    {
        <p>Галерея пуста.</p>
    }
    else
    {
        @foreach (var galleryItem in galleryData)
        {
            <div class="gallery-section">
                <h2 class="section-title">@galleryItem.Name</h2>
                <div class="image-grid">
                    @foreach (var image in galleryItem.Images)
                    {
                        <div class="image-item">
                            <img src="@image.Path" alt="@image.Name" class="gallery-image" @onclick="() => OpenModal(image)" />
                        </div>
                    }
                </div>
            </div>
        }
    }
</div>

@if (selectedImage != null)
{
    <div class="modal-overlay" @onclick="CloseModal">
        <div class="modal-content" @onclick:stopPropagation="true">
            <button class="modal-close" @onclick="CloseModal">&times;</button>
            <img src="@selectedImage.Path" alt="@selectedImage.Name" class="modal-image" />
        </div>
    </div>
}

@code {
    private List<GallerySection>? galleryData;
    private GalleryImage? selectedImage;

    protected override async Task OnInitializedAsync()
    {
        await LoadGallery();
    }

    private async Task LoadGallery()
    {
        try
        {
            galleryData = new List<GallerySection>();
            var galleryPath = Path.Combine(Environment.WebRootPath, "galery");
            
            if (Directory.Exists(galleryPath))
            {
                var subDirectories = Directory.GetDirectories(galleryPath);
                
                foreach (var subDir in subDirectories)
                {
                    var dirName = Path.GetFileName(subDir);
                    var section = new GallerySection { Name = dirName, Images = new List<GalleryImage>() };
                    
                    var imageFiles = Directory.GetFiles(subDir, "*.*")
                        .Where(file => IsImageFile(file))
                        .ToArray();
                    
                    foreach (var imageFile in imageFiles)
                    {
                        var fileName = Path.GetFileName(imageFile);
                        var relativePath = $"galery/{dirName}/{fileName}";
                        
                        section.Images.Add(new GalleryImage
                        {
                            Name = Path.GetFileNameWithoutExtension(fileName),
                            Path = relativePath
                        });
                    }
                    
                    if (section.Images.Any())
                    {
                        galleryData.Add(section);
                    }
                }
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error loading gallery: {ex.Message}");
            galleryData = new List<GallerySection>();
        }
    }
    
    private bool IsImageFile(string filePath)
    {
        var extension = Path.GetExtension(filePath).ToLowerInvariant();
        return extension == ".jpg" || extension == ".jpeg" || extension == ".png" || 
               extension == ".gif" || extension == ".bmp" || extension == ".webp";
    }
    
    private void OpenModal(GalleryImage image)
    {
        selectedImage = image;
    }
    
    private void CloseModal()
    {
        selectedImage = null;
    }

    public class GallerySection
    {
        public string Name { get; set; } = "";
        public List<GalleryImage> Images { get; set; } = new();
    }

    public class GalleryImage
    {
        public string Name { get; set; } = "";
        public string Path { get; set; } = "";
    }
}